/**
  *	Calls the remote api with url as argument
  *
  *	@param string var type, string var url, array post_data (optional)
  *	@return mixed 
  */
  public function api_call($type, $url, $post_data = null)
  {
  	$curl = curl_init();
	
  	if($type == 'get'){
  		
  		curl_setopt_array($curl, array(
		    CURLOPT_RETURNTRANSFER => 1,
		    CURLOPT_URL => $url,
		    CURLOPT_USERAGENT => 'cURL Api call'
			));

			$resp = curl_exec($curl);	
			curl_close($curl);
		}else if($type == 'post'){ 	  																
			$postData = '';			 
			foreach($post_data as $k => $v) 
			{ 
				$postData .= $k . '='.$v.'&'; 
			}
			$postData = rtrim($postData, '&');	
			curl_setopt($curl,CURLOPT_URL,$url);
			curl_setopt($curl,CURLOPT_RETURNTRANSFER,true);
			curl_setopt($curl,CURLOPT_HEADER, false); 
			curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
			curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
			curl_setopt($curl, CURLOPT_CAINFO, '/etc/pki/tls/cert.pem');				
			curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type: application/x-www-form-urlencoded'));
			curl_setopt($curl, CURLOPT_PROTOCOLS, CURLPROTO_HTTPS); 
			curl_setopt($curl,CURLOPT_FOLLOWLOCATION,TRUE);
			curl_setopt($curl,CURLOPT_MAXREDIRS,2);
			curl_setopt($curl, CURLOPT_POST, count($postData));
			curl_setopt($curl, CURLOPT_POSTFIELDS, $postData);    
			$resp=curl_exec($curl);		
			curl_close($curl);											
		}else{
			return false;
		}
		return $resp;	 
  }
  // call curl api : $this->api_call('get',api_url'');
